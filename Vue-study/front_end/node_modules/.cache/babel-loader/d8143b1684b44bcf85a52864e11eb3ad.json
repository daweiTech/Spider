{"remainingRequest":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js!D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\src\\components\\wbAnalyze\\Relation_graph.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\src\\components\\wbAnalyze\\Relation_graph.vue","mtime":1673006195000},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\babel.config.js","mtime":1673006195000},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673935854020},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1673935857034},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673935854020},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1673935857333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAicmVsYXRpb25fZ3JhcGgiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjYXRlZ29yaWVzOiBbewogICAgICAgIG5hbWU6ICLmraPluLjnlKjmiLciCiAgICAgIH0KICAgICAgLy8gewogICAgICAvLyAgIG5hbWU6ICLmsLTlhpsiLAogICAgICAvLyB9LAogICAgICBdCiAgICB9OwogIH0sCgogIG1ldGhvZHM6IHsKICAgIG15UmVsYXRpb25HcmFwaChpZCkgewogICAgICBsZXQgb3B0aW9uOwogICAgICBsZXQgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2hvd19ncmFwaCIpKTsKICAgICAgbXlDaGFydC5zaG93TG9hZGluZygpOwogICAgICB0aGlzLiRheGlvcy5nZXQoInJlbGF0aW9uX2dyYXBoP3RhZ190YXNrX2lkPSIgKyBpZCkudGhlbihyZXMgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGEpOwogICAgICAgIGxldCBub2RlcyA9IHJlcy5kYXRhLmRhdGEubm9kZXNfbGlzdDsKICAgICAgICBmb3IgKGxldCBpbmRleCBpbiBub2RlcykgewogICAgICAgICAgbm9kZXNbaW5kZXhdLmlkID0gaW5kZXg7CiAgICAgICAgfQogICAgICAgIGxldCBsaW5rcyA9IHJlcy5kYXRhLmRhdGEubGlua3NfbGlzdDsKICAgICAgICBsaW5rcy5mb3JFYWNoKGxpbmsgPT4gewogICAgICAgICAgZm9yIChsZXQgbm9kZSBvZiBub2RlcykgewogICAgICAgICAgICBpZiAobGluay5zb3VyY2UgPT0gbm9kZS5uYW1lKSB7CiAgICAgICAgICAgICAgbGluay5zb3VyY2UgPSBub2RlLmlkOwogICAgICAgICAgICAgIG5vZGUuc2hvdyA9IHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGxpbmsudGFyZ2V0ID09IG5vZGUubmFtZSkgewogICAgICAgICAgICAgIGxpbmsudGFyZ2V0ID0gbm9kZS5pZDsKICAgICAgICAgICAgICBub2RlLnNob3cgPSB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgbGV0IG5ld05vZGVzID0gW107CiAgICAgICAgZm9yIChsZXQgbiBpbiBub2RlcykgewogICAgICAgICAgaWYgKG5vZGVzW25dLnNob3cpIHsKICAgICAgICAgICAgbmV3Tm9kZXMucHVzaChub2Rlc1tuXSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGNvbnNvbGUubG9nKG5ld05vZGVzKTsKICAgICAgICBjb25zb2xlLmxvZyhsaW5rcyk7CiAgICAgICAgbXlDaGFydC5oaWRlTG9hZGluZygpOwogICAgICAgIG5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICAgIG5vZGUubGFiZWwgPSB7CiAgICAgICAgICAgIHNob3c6IG5vZGUudmFsdWUgPiAxMAogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgICBvcHRpb24gPSB7CiAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICB0ZXh0OiAi55So5oi35YWz57O75Zu+IiwKICAgICAgICAgICAgc3VidGV4dDogIkRlZmF1bHQgbGF5b3V0IiwKICAgICAgICAgICAgdG9wOiAiYm90dG9tIiwKICAgICAgICAgICAgbGVmdDogInJpZ2h0IgogICAgICAgICAgfSwKICAgICAgICAgIHRvb2x0aXA6IHt9LAogICAgICAgICAgbGVnZW5kOiBbewogICAgICAgICAgICBkYXRhOiB0aGlzLmNhdGVnb3JpZXMubWFwKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGEubmFtZTsKICAgICAgICAgICAgfSkKICAgICAgICAgIH1dLAogICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IDE1MDAsCiAgICAgICAgICBhbmltYXRpb25FYXNpbmdVcGRhdGU6ICJxdWludGljSW5PdXQiLAogICAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgICBuYW1lOiAi55So5oi35YWz57O75Zu+IiwKICAgICAgICAgICAgdHlwZTogImdyYXBoIiwKICAgICAgICAgICAgbGF5b3V0OiAiZm9yY2UiLAogICAgICAgICAgICBkYXRhOiBuZXdOb2RlcywKICAgICAgICAgICAgbGlua3M6IGxpbmtzLAogICAgICAgICAgICBjYXRlZ29yaWVzOiB0aGlzLmNhdGVnb3JpZXMsCiAgICAgICAgICAgIHJvYW06IHRydWUsCiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgcG9zaXRpb246ICJyaWdodCIsCiAgICAgICAgICAgICAgZm9ybWF0dGVyOiAie2J9IgogICAgICAgICAgICB9LAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogInNvdXJjZSIsCiAgICAgICAgICAgICAgY3VydmVuZXNzOiAwLjMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICBmb2N1czogImFkamFjZW5jeSIsCiAgICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgICB3aWR0aDogMTAKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH1dCiAgICAgICAgfTsKICAgICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgICB9KTsKICAgICAgb3B0aW9uICYmIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9LAogICAgVG9QZXJzb25MaXN0KCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogIi9wZXJzb25fbGlzdCIsCiAgICAgICAgcXVlcnk6IHsKICAgICAgICAgIHRhZ190YXNrX2lkOiB0aGlzLnRpZAogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgbGV0IHJlcyA9IEFycmF5LmZyb20obmV3IEFycmF5KDUpLCAoKSA9PiBbXSk7CiAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgdGhpcy4kYnVzLiRvbigic2VuZF90YWdfdGFza19pZCIsIHRhZ190YXNrX2lkID0+IHsKICAgICAgY29uc29sZS5sb2coIui/memHjOaYr+WFs+ezu+Wbvue7hOS7tizmlLbliLDkuobmlbDmja46IiwgdGFnX3Rhc2tfaWQpOwogICAgICB0aGlzLnRpZCA9IHRhZ190YXNrX2lkOwogICAgICB0aGlzLm15UmVsYXRpb25HcmFwaCh0YWdfdGFza19pZCk7CiAgICB9KTsKICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLiRidXMuJG9mZigic2VuZF90YWdfdGFza19pZCIpOwogIH0KfTs="},{"version":3,"mappings":";AAaA;EACAA;EACAC;IACA;MACAC,aACA;QACAF;MACA;MACA;MACA;MACA;MAAA;IAEA;EACA;;EACAG;IACAC;MACA;MACA;MACAC;MACA;QACAC;QACA;QACA;UACAC;QACA;QACA;QACAC;UACA;YACA;cACAC;cACAC;YACA;YACA;cACAD;cACAC;YACA;UACA;QACA;QACA;QACA;UACA;YACAC;UACA;QACA;QACAL;QACAA;QACAD;QACAE;UACAG;YACAE;UACA;QACA;QACAC;UACAC;YACAC;YACAC;YACAC;YACAC;UACA;UACAC;UACAC,SACA;YACAnB;cACA;YACA;UACA,EACA;UACAoB;UACAC;UACAC,SACA;YACAvB;YACAwB;YACAC;YACAxB;YACAO;YACAN;YACAwB;YACAC;cACAC;cACAC;YACA;YACAC;cACAC;cACAC;YACA;YACAC;cACAC;cACAJ;gBACAK;cACA;YACA;UACA;QAEA;QACA9B;MACA;MACAQ;IACA;IACAuB;MACA;QACAC;QACAC;UACAC;QACA;MACA;IACA;EACA;EACAC;IACA;IACAlC;IACA;MACAA;MACA;MACA;IAEA;EACA;EACAmC;IACA;EACA;AACA","names":["name","data","categories","methods","myRelationGraph","myChart","console","nodes","links","link","node","newNodes","show","option","title","text","subtext","top","left","tooltip","legend","animationDuration","animationEasingUpdate","series","type","layout","roam","label","position","formatter","lineStyle","color","curveness","emphasis","focus","width","ToPersonList","path","query","tag_task_id","mounted","beforeDestroy"],"sourceRoot":"src/components/wbAnalyze","sources":["Relation_graph.vue"],"sourcesContent":["<template>\n  <div class=\"relation_graph\">\n    <div class=\"relation_graph_top\" @click=\"ToPersonList\">\n      <svg class=\"icon\" aria-hidden=\"true\">\n        <use xlink:href=\"#icon-wangluoguanxitu\"></use>\n      </svg>\n      <span>关系图</span>\n    </div>\n    <div id=\"show_graph\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"relation_graph\",\n  data() {\n    return {\n      categories: [\n        {\n          name: \"正常用户\",\n        },\n        // {\n        //   name: \"水军\",\n        // },\n      ],\n    };\n  },\n  methods: {\n    myRelationGraph(id) {\n      let option;\n      let myChart = this.$echarts.init(document.getElementById(\"show_graph\"));\n      myChart.showLoading();\n      this.$axios.get(\"relation_graph?tag_task_id=\"+id).then((res) => {\n        console.log(res.data.data)\n        let nodes = res.data.data.nodes_list;\n        for (let index in nodes) {\n          nodes[index].id = index;\n        }\n        let links = res.data.data.links_list;\n        links.forEach((link) => {\n          for (let node of nodes) {\n            if (link.source == node.name) {\n              link.source = node.id;\n              node.show = true;\n            }\n            if (link.target == node.name) {\n              link.target = node.id;\n              node.show = true;\n            }\n          }\n        });\n        let newNodes = [];\n        for(let n in nodes){\n          if(nodes[n].show){\n            newNodes.push(nodes[n])\n          }\n        }\n        console.log(newNodes);\n        console.log(links);\n        myChart.hideLoading();\n        nodes.forEach(function (node) {\n          node.label = {\n            show: node.value > 10,\n          };\n        });\n        option = {\n          title: {\n            text: \"用户关系图\",\n            subtext: \"Default layout\",\n            top: \"bottom\",\n            left: \"right\",\n          },\n          tooltip: {},\n          legend: [\n            {\n              data: this.categories.map(function (a) {\n                return a.name;\n              }),\n            },\n          ],\n          animationDuration: 1500,\n          animationEasingUpdate: \"quinticInOut\",\n          series: [\n            {\n              name: \"用户关系图\",\n              type: \"graph\",\n              layout: \"force\",\n              data: newNodes,\n              links: links,\n              categories: this.categories,\n              roam: true,\n              label: {\n                position: \"right\",\n                formatter: \"{b}\",\n              },\n              lineStyle: {\n                color: \"source\",\n                curveness: 0.3,\n              },\n              emphasis: {\n                focus: \"adjacency\",\n                lineStyle: {\n                  width: 10,\n                },\n              },\n            },\n          ],\n        };\n        myChart.setOption(option);\n      });\n      option && myChart.setOption(option);\n    },\n    ToPersonList() {\n      this.$router.push({\n        path: \"/person_list\",\n        query: {\n          tag_task_id: this.tid,\n        },\n      });\n    },\n  },\n  mounted() {\n    let res = Array.from(new Array(5), () => []);\n    console.log(res);\n    this.$bus.$on(\"send_tag_task_id\", (tag_task_id) => {\n      console.log(\"这里是关系图组件,收到了数据:\", tag_task_id);\n      this.tid = tag_task_id;\n      this.myRelationGraph(tag_task_id);\n\n    });\n  },\n  beforeDestroy() {\n    this.$bus.$off(\"send_tag_task_id\");\n  },\n};\n</script>\n\n<style scpoed>\n.relation_graph_top {\n  margin-left: 10px;\n}\n.relation_graph {\n  background-color: #fff;\n  position: absolute;\n  top: 31%;\n  width: 100%;\n  height: 68%;\n}\n#show_graph {\n  height: 500px;\n  width: 400px;\n}\n</style>"]}]}