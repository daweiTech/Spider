{"remainingRequest":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\src\\components\\wbAnalyze\\Relation_graph.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\src\\components\\wbAnalyze\\Relation_graph.vue","mtime":1673006195000},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673935854020},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1673935857034},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673935854020},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1673935857333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAicmVsYXRpb25fZ3JhcGgiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjYXRlZ29yaWVzOiBbCiAgICAgICAgewogICAgICAgICAgbmFtZTogIuato+W4uOeUqOaItyIsCiAgICAgICAgfSwKICAgICAgICAvLyB7CiAgICAgICAgLy8gICBuYW1lOiAi5rC05YabIiwKICAgICAgICAvLyB9LAogICAgICBdLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG15UmVsYXRpb25HcmFwaChpZCkgewogICAgICBsZXQgb3B0aW9uOwogICAgICBsZXQgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2hvd19ncmFwaCIpKTsKICAgICAgbXlDaGFydC5zaG93TG9hZGluZygpOwogICAgICB0aGlzLiRheGlvcy5nZXQoInJlbGF0aW9uX2dyYXBoP3RhZ190YXNrX2lkPSIraWQpLnRoZW4oKHJlcykgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGEpCiAgICAgICAgbGV0IG5vZGVzID0gcmVzLmRhdGEuZGF0YS5ub2Rlc19saXN0OwogICAgICAgIGZvciAobGV0IGluZGV4IGluIG5vZGVzKSB7CiAgICAgICAgICBub2Rlc1tpbmRleF0uaWQgPSBpbmRleDsKICAgICAgICB9CiAgICAgICAgbGV0IGxpbmtzID0gcmVzLmRhdGEuZGF0YS5saW5rc19saXN0OwogICAgICAgIGxpbmtzLmZvckVhY2goKGxpbmspID0+IHsKICAgICAgICAgIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHsKICAgICAgICAgICAgaWYgKGxpbmsuc291cmNlID09IG5vZGUubmFtZSkgewogICAgICAgICAgICAgIGxpbmsuc291cmNlID0gbm9kZS5pZDsKICAgICAgICAgICAgICBub2RlLnNob3cgPSB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChsaW5rLnRhcmdldCA9PSBub2RlLm5hbWUpIHsKICAgICAgICAgICAgICBsaW5rLnRhcmdldCA9IG5vZGUuaWQ7CiAgICAgICAgICAgICAgbm9kZS5zaG93ID0gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIGxldCBuZXdOb2RlcyA9IFtdOwogICAgICAgIGZvcihsZXQgbiBpbiBub2Rlcyl7CiAgICAgICAgICBpZihub2Rlc1tuXS5zaG93KXsKICAgICAgICAgICAgbmV3Tm9kZXMucHVzaChub2Rlc1tuXSkKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY29uc29sZS5sb2cobmV3Tm9kZXMpOwogICAgICAgIGNvbnNvbGUubG9nKGxpbmtzKTsKICAgICAgICBteUNoYXJ0LmhpZGVMb2FkaW5nKCk7CiAgICAgICAgbm9kZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkgewogICAgICAgICAgbm9kZS5sYWJlbCA9IHsKICAgICAgICAgICAgc2hvdzogbm9kZS52YWx1ZSA+IDEwLAogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgICBvcHRpb24gPSB7CiAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICB0ZXh0OiAi55So5oi35YWz57O75Zu+IiwKICAgICAgICAgICAgc3VidGV4dDogIkRlZmF1bHQgbGF5b3V0IiwKICAgICAgICAgICAgdG9wOiAiYm90dG9tIiwKICAgICAgICAgICAgbGVmdDogInJpZ2h0IiwKICAgICAgICAgIH0sCiAgICAgICAgICB0b29sdGlwOiB7fSwKICAgICAgICAgIGxlZ2VuZDogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgZGF0YTogdGhpcy5jYXRlZ29yaWVzLm1hcChmdW5jdGlvbiAoYSkgewogICAgICAgICAgICAgICAgcmV0dXJuIGEubmFtZTsKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgfSwKICAgICAgICAgIF0sCiAgICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogMTUwMCwKICAgICAgICAgIGFuaW1hdGlvbkVhc2luZ1VwZGF0ZTogInF1aW50aWNJbk91dCIsCiAgICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICLnlKjmiLflhbPns7vlm74iLAogICAgICAgICAgICAgIHR5cGU6ICJncmFwaCIsCiAgICAgICAgICAgICAgbGF5b3V0OiAiZm9yY2UiLAogICAgICAgICAgICAgIGRhdGE6IG5ld05vZGVzLAogICAgICAgICAgICAgIGxpbmtzOiBsaW5rcywKICAgICAgICAgICAgICBjYXRlZ29yaWVzOiB0aGlzLmNhdGVnb3JpZXMsCiAgICAgICAgICAgICAgcm9hbTogdHJ1ZSwKICAgICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgICAgcG9zaXRpb246ICJyaWdodCIsCiAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6ICJ7Yn0iLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogInNvdXJjZSIsCiAgICAgICAgICAgICAgICBjdXJ2ZW5lc3M6IDAuMywKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgICBmb2N1czogImFkamFjZW5jeSIsCiAgICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgXSwKICAgICAgICB9OwogICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICAgIH0pOwogICAgICBvcHRpb24gJiYgbXlDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsKICAgIH0sCiAgICBUb1BlcnNvbkxpc3QoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAiL3BlcnNvbl9saXN0IiwKICAgICAgICBxdWVyeTogewogICAgICAgICAgdGFnX3Rhc2tfaWQ6IHRoaXMudGlkLAogICAgICAgIH0sCiAgICAgIH0pOwogICAgfSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICBsZXQgcmVzID0gQXJyYXkuZnJvbShuZXcgQXJyYXkoNSksICgpID0+IFtdKTsKICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICB0aGlzLiRidXMuJG9uKCJzZW5kX3RhZ190YXNrX2lkIiwgKHRhZ190YXNrX2lkKSA9PiB7CiAgICAgIGNvbnNvbGUubG9nKCLov5nph4zmmK/lhbPns7vlm77nu4Tku7Ys5pS25Yiw5LqG5pWw5o2uOiIsIHRhZ190YXNrX2lkKTsKICAgICAgdGhpcy50aWQgPSB0YWdfdGFza19pZDsKICAgICAgdGhpcy5teVJlbGF0aW9uR3JhcGgodGFnX3Rhc2tfaWQpOwoKICAgIH0pOwogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMuJGJ1cy4kb2ZmKCJzZW5kX3RhZ190YXNrX2lkIik7CiAgfSwKfTsK"},{"version":3,"sources":["Relation_graph.vue"],"names":[],"mappings":";AAafile":"Relation_graph.vue","sourceRoot":"src/components/wbAnalyze","sourcesContent":["<template>\n  <div class=\"relation_graph\">\n    <div class=\"relation_graph_top\" @click=\"ToPersonList\">\n      <svg class=\"icon\" aria-hidden=\"true\">\n        <use xlink:href=\"#icon-wangluoguanxitu\"></use>\n      </svg>\n      <span>关系图</span>\n    </div>\n    <div id=\"show_graph\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"relation_graph\",\n  data() {\n    return {\n      categories: [\n        {\n          name: \"正常用户\",\n        },\n        // {\n        //   name: \"水军\",\n        // },\n      ],\n    };\n  },\n  methods: {\n    myRelationGraph(id) {\n      let option;\n      let myChart = this.$echarts.init(document.getElementById(\"show_graph\"));\n      myChart.showLoading();\n      this.$axios.get(\"relation_graph?tag_task_id=\"+id).then((res) => {\n        console.log(res.data.data)\n        let nodes = res.data.data.nodes_list;\n        for (let index in nodes) {\n          nodes[index].id = index;\n        }\n        let links = res.data.data.links_list;\n        links.forEach((link) => {\n          for (let node of nodes) {\n            if (link.source == node.name) {\n              link.source = node.id;\n              node.show = true;\n            }\n            if (link.target == node.name) {\n              link.target = node.id;\n              node.show = true;\n            }\n          }\n        });\n        let newNodes = [];\n        for(let n in nodes){\n          if(nodes[n].show){\n            newNodes.push(nodes[n])\n          }\n        }\n        console.log(newNodes);\n        console.log(links);\n        myChart.hideLoading();\n        nodes.forEach(function (node) {\n          node.label = {\n            show: node.value > 10,\n          };\n        });\n        option = {\n          title: {\n            text: \"用户关系图\",\n            subtext: \"Default layout\",\n            top: \"bottom\",\n            left: \"right\",\n          },\n          tooltip: {},\n          legend: [\n            {\n              data: this.categories.map(function (a) {\n                return a.name;\n              }),\n            },\n          ],\n          animationDuration: 1500,\n          animationEasingUpdate: \"quinticInOut\",\n          series: [\n            {\n              name: \"用户关系图\",\n              type: \"graph\",\n              layout: \"force\",\n              data: newNodes,\n              links: links,\n              categories: this.categories,\n              roam: true,\n              label: {\n                position: \"right\",\n                formatter: \"{b}\",\n              },\n              lineStyle: {\n                color: \"source\",\n                curveness: 0.3,\n              },\n              emphasis: {\n                focus: \"adjacency\",\n                lineStyle: {\n                  width: 10,\n                },\n              },\n            },\n          ],\n        };\n        myChart.setOption(option);\n      });\n      option && myChart.setOption(option);\n    },\n    ToPersonList() {\n      this.$router.push({\n        path: \"/person_list\",\n        query: {\n          tag_task_id: this.tid,\n        },\n      });\n    },\n  },\n  mounted() {\n    let res = Array.from(new Array(5), () => []);\n    console.log(res);\n    this.$bus.$on(\"send_tag_task_id\", (tag_task_id) => {\n      console.log(\"这里是关系图组件,收到了数据:\", tag_task_id);\n      this.tid = tag_task_id;\n      this.myRelationGraph(tag_task_id);\n\n    });\n  },\n  beforeDestroy() {\n    this.$bus.$off(\"send_tag_task_id\");\n  },\n};\n</script>\n\n<style scpoed>\n.relation_graph_top {\n  margin-left: 10px;\n}\n.relation_graph {\n  background-color: #fff;\n  position: absolute;\n  top: 31%;\n  width: 100%;\n  height: 68%;\n}\n#show_graph {\n  height: 500px;\n  width: 400px;\n}\n</style>"]}]}