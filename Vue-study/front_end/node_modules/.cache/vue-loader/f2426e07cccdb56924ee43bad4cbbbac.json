{"remainingRequest":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\src\\components\\wbAnalyze\\Topic_hot.vue?vue&type=style&index=0&id=7d0b532f&scpoed=true&lang=css&","dependencies":[{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\src\\components\\wbAnalyze\\Topic_hot.vue","mtime":1673006195000},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1673935854963},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1673935858031},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":1673935856162},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673935854020},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1673935857333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50b3BpY19ob3QgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgaGVpZ2h0OiA0MSU7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9CiNsaW5lQ2hhcnQgewogIGxlZnQ6IDIwcHg7CiAgd2lkdGg6IDEwMDBweDsKICBoZWlnaHQ6IDQwMHB4Owp9Ci50b3BpY19ob3RfdG9wIHsKICBoZWlnaHQ6IDEwJTsKICBtYXJnaW4tbGVmdDogMjBweDsKfQoudG9waWNfaG90X3RvcCAucmFkaW8gewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICByaWdodDogMTBweDsKICB0b3A6IDEwcHg7Cn0KLmVsLXJhZGlvIHsKICB6LWluZGV4OiA5OTsKfQo="},{"version":3,"sources":["Topic_hot.vue"],"names":[],"mappings":";AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Topic_hot.vue","sourceRoot":"src/components/wbAnalyze","sourcesContent":["<template>\n  <div class=\"topic_hot\">\n    <div class=\"topic_hot_top\">\n      <svg class=\"icon\" aria-hidden=\"true\">\n        <use xlink:href=\"#icon-redu\"></use>\n      </svg>\n      <span>话题热度</span>\n      <div class=\"radio\">\n        <el-radio-group v-model=\"radio\">\n          <el-radio :label=\"1\">一天</el-radio>\n          <el-radio :label=\"2\">一个月</el-radio>\n          <el-radio :label=\"3\">三个月</el-radio>\n        </el-radio-group>\n      </div>\n    </div>\n    <div id=\"lineChart\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"topic_hot\",\n  data() {\n    return {\n      radio: 1,\n      one_day_daytime: \"\",\n      one_day_hourtime: [],\n      one_day_count: [],\n      one_month_time: [],\n      one_month_count: [],\n      three_month_time: [],\n      three_month_count: [],\n      myChart: \"\",\n    };\n  },\n  watch: {\n    radio(newradio) {\n      this.changeline(newradio);\n    },\n  },\n  methods: {\n    getTopicData(id) {\n      this.$axios.get(\"/hot?tag_task_id=\"+id).then((res) => {\n        this.one_day_count = res.data.data.one_day.data_count;\n        let time = res.data.data.one_day.data_time;\n        this.one_day_daytime = time[0].split(\"T\")[0];\n        for (let index in time) {\n          this.one_day_hourtime[index] = time[index].split(\"T\")[1];\n        }\n        this.one_month_count = res.data.data.one_month.data_count;\n        time = res.data.data.one_month.data_time;\n        for (let index in time) {\n          this.one_month_time[index] = time[index].split(\"T\")[0];\n        }\n        this.three_month_count = res.data.data.three_month.data_count;\n        time = res.data.data.three_month.data_time;\n        for (let index in time) {\n          this.three_month_time[index] = time[index].split(\"T\")[0];\n        }\n      });\n    },\n    myLineChart(time, count) {\n      let option;\n      if (\n        this.myChart != null &&\n        this.myChart != \"\" &&\n        this.myChart != undefined\n      ) {\n        this.myChart.dispose(); //解决echarts dom已经加载的报错\n      }\n      this.myChart = this.$echarts.init(document.getElementById(\"lineChart\"));\n      option = {\n        tooltip: {\n          trigger: \"axis\",\n          position: \"center\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n        },\n        xAxis: {\n          type: \"category\",\n          data: time,\n        },\n        yAxis: {\n          type: \"value\",\n        },\n        series: [\n          {\n            data: count,\n            type: \"line\",\n          },\n        ],\n      };\n      this.myChart.setOption(option);\n      option && this.myChart.setOption(option);\n    },\n    changeline(line) {\n      if (line == 1) {\n        this.myLineChart(this.one_day_hourtime, this.one_day_count);\n      } else if (line == 2) {\n        this.myLineChart(this.one_month_time, this.one_month_count);\n      } else {\n        this.myLineChart(this.three_month_time, this.three_month_count);\n      }\n    },\n  },\n  mounted() {\n    this.$bus.$on(\"send_tag_task_id\", (tag_task_id) => {\n      console.log(\"这里是折线图组件,收到了数据:\", tag_task_id);\n      this.getTopicData(tag_task_id);\n    });\n    setTimeout(() => {\n      this.myLineChart(this.one_day_hourtime, this.one_day_count);\n    }, 2000);\n  },\n  beforeDestroy() {\n    this.$bus.$off(\"send_tag_task_id\");\n  },\n};\n</script>\n\n<style scpoed>\n.topic_hot {\n  background-color: #fff;\n  height: 41%;\n  position: relative;\n}\n#lineChart {\n  left: 20px;\n  width: 1000px;\n  height: 400px;\n}\n.topic_hot_top {\n  height: 10%;\n  margin-left: 20px;\n}\n.topic_hot_top .radio {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n}\n.el-radio {\n  z-index: 99;\n}\n</style>"]}]}