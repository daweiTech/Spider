{"remainingRequest":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\src\\components\\blog_detail\\cloud_graph.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\src\\components\\blog_detail\\cloud_graph.vue","mtime":1673006195000},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673935854020},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":1673935857034},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673935854020},{"path":"D:\\Googledownload\\Topic_and_user_profile_analysis_system-master\\code\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":1673935857333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAid29yZF9jbG91ZCIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWVyOiAiIiwKICAgICAgbXlDaGFydDogIiIsCiAgICAgIGNsb3VkX2dyYXBoX2RhdGE6ICIiLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldENsb3VkR3JhcGgoKSB7CiAgICAgIGxldCBxdWVyeSA9IHRoaXMuJHJvdXRlLnF1ZXJ5OwogICAgICB0aGlzLiRheGlvcy5nZXQoImNvbW1lbnQvY2xvdWQ/dGFnX3Rhc2tfaWQ9IitxdWVyeS50YWdfdGFza19pZCsiJndlaWJvX2lkPSIrcXVlcnkud2VpYm9faWQpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMuY2xvdWRfZ3JhcGhfZGF0YSA9IHJlcy5kYXRhLmRhdGEuZGF0YTsKICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YS5kYXRhLmRhdGEpCiAgICAgIH0pOwogICAgfSwKICAgIG15V29yZENsb3VkKCkgewogICAgICBsZXQgb3B0aW9uOwogICAgICBpZiAoCiAgICAgICAgdGhpcy5teUNoYXJ0ICE9IG51bGwgJiYKICAgICAgICB0aGlzLm15Q2hhcnQgIT0gIiIgJiYKICAgICAgICB0aGlzLm15Q2hhcnQgIT0gdW5kZWZpbmVkCiAgICAgICkgewogICAgICAgIHRoaXMubXlDaGFydC5kaXNwb3NlKCk7IC8v6Kej5YazZWNoYXJ0cyBkb23lt7Lnu4/liqDovb3nmoTmiqXplJkKICAgICAgfQogICAgICAvLyDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LCiAgICAgIHRoaXMubXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCgKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZ3JhcGhfd29yZF9jbG91ZCIpCiAgICAgICk7CiAgICAgIC8vIOaMh+WumuWbvuihqOeahOmFjee9rumhueWSjOaVsOaNrgogICAgICBvcHRpb24gPSB7CiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICB9LAogICAgICAgIHNlcmllczogWwogICAgICAgICAgewogICAgICAgICAgICB0eXBlOiAid29yZENsb3VkIiwKICAgICAgICAgICAgc2l6ZVJhbmdlOiBbMTAsIDUwXSwgLy/mloflrZfojIPlm7QKICAgICAgICAgICAgLy/mlofmnKzml4vovazojIPlm7TvvIzmlofmnKzlsIbpgJrov4dyb3RhdGlvblN0ZXA0NeWcqFstOTAsOTBd6IyD5Zu05YaF6ZqP5py65peL6L2sCiAgICAgICAgICAgIHJvdGF0aW9uUmFuZ2U6IFstNDUsIDkwXSwKICAgICAgICAgICAgcm90YXRpb25TdGVwOiA0NSwKICAgICAgICAgICAgdGV4dFJvdGF0aW9uOiBbMCwgNDUsIDkwLCAtNDVdLAogICAgICAgICAgICAvL+W9oueKtgogICAgICAgICAgICBzaGFwZTogImNhcmRpb2lkICIsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAvL+aWh+Wtl+minOiJsueahOmaj+acuuiJsgogICAgICAgICAgICAgICAgcmV0dXJuICgKICAgICAgICAgICAgICAgICAgInJnYigiICsKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDIwMCksCiAgICAgICAgICAgICAgICAgICAgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTAwKSwKICAgICAgICAgICAgICAgICAgICBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAzMDApLAogICAgICAgICAgICAgICAgICBdLmpvaW4oIiwiKSArCiAgICAgICAgICAgICAgICAgICIpIgogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhOiB0aGlzLmNsb3VkX2dyYXBoX2RhdGEsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgIH07CiAgICAgIHRoaXMubXlDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsKICAgICAgLy8g5L2/55So5Yia5oyH5a6a55qE6YWN572u6aG55ZKM5pWw5o2u5pi+56S65Zu+6KGo44CCCiAgICAgIG9wdGlvbiAmJiB0aGlzLm15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0Q2xvdWRHcmFwaCgpOwogICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgdGhpcy5teVdvcmRDbG91ZCgpOwogICAgfSwgNTAwMCk7CiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsKICAgIHRoaXMudGltZXIgPSBudWxsOwogIH0sCn07Cg=="},{"version":3,"sources":["cloud_graph.vue"],"names":[],"mappings":";AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cloud_graph.vue","sourceRoot":"src/components/blog_detail","sourcesContent":["<template>\n  <div class=\"cloud_graph\">\n    <div class=\"cloud_graph_title\">云图</div>\n    <div id=\"graph_word_cloud\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"word_cloud\",\n  data() {\n    return {\n      timer: \"\",\n      myChart: \"\",\n      cloud_graph_data: \"\",\n    };\n  },\n  methods: {\n    getCloudGraph() {\n      let query = this.$route.query;\n      this.$axios.get(\"comment/cloud?tag_task_id=\"+query.tag_task_id+\"&weibo_id=\"+query.weibo_id).then((res) => {\n        this.cloud_graph_data = res.data.data.data;\n        console.log(res.data.data.data)\n      });\n    },\n    myWordCloud() {\n      let option;\n      if (\n        this.myChart != null &&\n        this.myChart != \"\" &&\n        this.myChart != undefined\n      ) {\n        this.myChart.dispose(); //解决echarts dom已经加载的报错\n      }\n      // 基于准备好的dom，初始化echarts实例\n      this.myChart = this.$echarts.init(\n        document.getElementById(\"graph_word_cloud\")\n      );\n      // 指定图表的配置项和数据\n      option = {\n        tooltip: {\n          show: true,\n        },\n        series: [\n          {\n            type: \"wordCloud\",\n            sizeRange: [10, 50], //文字范围\n            //文本旋转范围，文本将通过rotationStep45在[-90,90]范围内随机旋转\n            rotationRange: [-45, 90],\n            rotationStep: 45,\n            textRotation: [0, 45, 90, -45],\n            //形状\n            shape: \"cardioid \",\n            textStyle: {\n              color: function () {\n                //文字颜色的随机色\n                return (\n                  \"rgb(\" +\n                  [\n                    Math.round(Math.random() * 200),\n                    Math.round(Math.random() * 100),\n                    Math.round(Math.random() * 300),\n                  ].join(\",\") +\n                  \")\"\n                );\n              },\n            },\n            data: this.cloud_graph_data,\n          },\n        ],\n      };\n      this.myChart.setOption(option);\n      // 使用刚指定的配置项和数据显示图表。\n      option && this.myChart.setOption(option);\n    },\n  },\n  mounted() {\n    this.getCloudGraph();\n    this.timer = setInterval(() => {\n      this.myWordCloud();\n    }, 5000);\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n};\n</script>\n\n<style scoped>\n.cloud_graph {\n  position: absolute;\n  width: 100%;\n  height: 18%;\n  top: 1%;\n  background-color: #fff;\n}\n.cloud_graph_title {\n  margin: 10px 20px;\n  padding: 5px;\n  font-weight: 600;\n  letter-spacing: 1px;\n}\n#graph_word_cloud {\n  width: 500px;\n  height: 120px;\n  top: -30px;\n  right: 10px;\n}\n</style>"]}]}